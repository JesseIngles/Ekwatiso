// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.DAL.Database.DatabaseContext;

#nullable disable

namespace webapi.Migrations
{
    [DbContext(typeof(EkwatisoDbContext))]
    partial class EkwatisoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbCampanha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<string>("Fotografias")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TbGerenteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("meta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ProvinciaId");

                    b.HasIndex("TbGerenteId");

                    b.ToTable("TbCampanhas");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TbCategorias");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbDoacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CampanhaId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Confirmado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<int>("DoadorId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Quantia")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.HasIndex("DoadorId");

                    b.ToTable("TbDoacoes");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbGerente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Admin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TbGerentes");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbPais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TbPaises");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbProvincia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PaisId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("TbProvincias");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroIdentificacao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProvinciaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProvinciaId");

                    b.ToTable("TbUsers");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbCampanha", b =>
                {
                    b.HasOne("webapi.DAL.Database.Entities.TbUser", "Autor")
                        .WithMany("Campanhas")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.DAL.Database.Entities.TbCategoria", "Categoria")
                        .WithMany("Campanhas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.DAL.Database.Entities.TbProvincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.DAL.Database.Entities.TbGerente", null)
                        .WithMany("Campanhas")
                        .HasForeignKey("TbGerenteId");

                    b.Navigation("Autor");

                    b.Navigation("Categoria");

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbDoacao", b =>
                {
                    b.HasOne("webapi.DAL.Database.Entities.TbCampanha", "Campanha")
                        .WithMany("Doacoes")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.DAL.Database.Entities.TbUser", "Doador")
                        .WithMany("Doacoes")
                        .HasForeignKey("DoadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Doador");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbProvincia", b =>
                {
                    b.HasOne("webapi.DAL.Database.Entities.TbPais", "Pais")
                        .WithMany("Provincias")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbUser", b =>
                {
                    b.HasOne("webapi.DAL.Database.Entities.TbProvincia", "Provincia")
                        .WithMany()
                        .HasForeignKey("ProvinciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provincia");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbCampanha", b =>
                {
                    b.Navigation("Doacoes");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbCategoria", b =>
                {
                    b.Navigation("Campanhas");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbGerente", b =>
                {
                    b.Navigation("Campanhas");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbPais", b =>
                {
                    b.Navigation("Provincias");
                });

            modelBuilder.Entity("webapi.DAL.Database.Entities.TbUser", b =>
                {
                    b.Navigation("Campanhas");

                    b.Navigation("Doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
